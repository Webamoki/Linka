name: Release NuGet Package

on:
  push:
    tags:
      - 'v*'  # Triggers on tags like v1.0.1, v2.0.0, etc.

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for git describe
    
    - name: Extract version from tag
      id: get_version
      run: |
        # Remove 'v' prefix from tag (e.g., v1.0.1 -> 1.0.1)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal
    
    - name: Pack NuGet package with MSBuild version detection
      run: |
        dotnet pack src/Linka/Linka.csproj \
          --configuration Release \
          --no-build \
          --output ./nupkg \
          -p:GitTag=${{ steps.get_version.outputs.VERSION }}
    
    - name: List generated packages
      run: ls -la ./nupkg/
    
    - name: Push to NuGet
      run: |
        dotnet nuget push ./nupkg/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          Release version ${{ steps.get_version.outputs.VERSION }}
          
          ## Changes
          - See commit history for detailed changes
          
          ## NuGet Package
          This release is available on NuGet: https://www.nuget.org/packages/Linka.ORM/${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
    
    - name: Upload NuGet package to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nupkg/Linka.ORM.${{ steps.get_version.outputs.VERSION }}.nupkg
        asset_name: Linka.ORM.${{ steps.get_version.outputs.VERSION }}.nupkg
        asset_content_type: application/zip
